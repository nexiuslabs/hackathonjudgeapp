// vite.config.ts
import { fileURLToPath, URL } from "node:url";
import { defineConfig } from "file:///home/project/node_modules/vite/dist/node/index.js";
import react from "file:///home/project/node_modules/@vitejs/plugin-react/dist/index.mjs";
import { VitePWA } from "file:///home/project/node_modules/vite-plugin-pwa/dist/index.js";

// src/config/theme-tokens.json
var theme_tokens_default = {
  colors: {
    brand: {
      "50": "#eef2ff",
      "100": "#e0e7ff",
      "200": "#c7d2fe",
      "300": "#a5b4fc",
      "400": "#818cf8",
      "500": "#6366f1",
      "600": "#4f46e5",
      "700": "#4338ca",
      "800": "#3730a3",
      "900": "#312e81"
    },
    neutral: {
      "50": "#f8fafc",
      "100": "#f1f5f9",
      "200": "#e2e8f0",
      "300": "#cbd5f5",
      "400": "#94a3b8",
      "500": "#64748b",
      "600": "#475569",
      "700": "#334155",
      "800": "#1e293b",
      "900": "#0f172a"
    },
    surface: {
      base: "#050816",
      muted: "#0b1120",
      elevated: "#131b2f",
      overlay: "rgba(10, 15, 27, 0.88)",
      border: "rgba(148, 163, 184, 0.24)",
      highlight: "rgba(99, 102, 241, 0.18)"
    },
    semantic: {
      info: "#38bdf8",
      success: "#22c55e",
      warning: "#facc15",
      danger: "#f87171"
    }
  },
  fontFamily: {
    sans: "'Inter', 'SF Pro Text', 'system-ui', 'Segoe UI', sans-serif",
    mono: "'JetBrains Mono', 'SFMono-Regular', 'Menlo', monospace"
  },
  fontSize: {
    xs: "0.75rem",
    sm: "0.875rem",
    base: "1rem",
    lg: "1.125rem",
    xl: "1.25rem",
    "2xl": "1.5rem",
    "3xl": "1.875rem"
  },
  radii: {
    sm: "0.5rem",
    md: "0.75rem",
    lg: "1rem",
    xl: "1.5rem",
    full: "9999px"
  },
  spacing: {
    "3xs": "0.25rem",
    "2xs": "0.375rem",
    xs: "0.5rem",
    sm: "0.75rem",
    md: "1rem",
    lg: "1.5rem",
    xl: "2rem",
    "2xl": "2.5rem",
    "3xl": "3rem"
  },
  shadows: {
    sm: "0 1px 2px rgba(15, 23, 42, 0.14)",
    md: "0 10px 30px rgba(15, 23, 42, 0.22)",
    xl: "0 30px 60px rgba(15, 23, 42, 0.25)"
  }
};

// src/config/theme-tokens.ts
var themeTokens = theme_tokens_default;
var tailwindTheme = {
  colors: {
    brand: themeTokens.colors.brand,
    neutral: themeTokens.colors.neutral,
    surface: themeTokens.colors.surface,
    info: themeTokens.colors.semantic.info,
    success: themeTokens.colors.semantic.success,
    warning: themeTokens.colors.semantic.warning,
    danger: themeTokens.colors.semantic.danger
  },
  fontFamily: themeTokens.fontFamily,
  fontSize: themeTokens.fontSize,
  borderRadius: themeTokens.radii,
  spacing: themeTokens.spacing,
  boxShadow: themeTokens.shadows
};
var brandKeys = Object.keys(themeTokens.colors.brand);
var neutralKeys = Object.keys(themeTokens.colors.neutral);

// src/config/app-metadata.ts
var appMetadata = {
  name: "Hackathon Judge",
  shortName: "Judge",
  description: "Coordinate judging assignments, capture scores, and stay aligned with the hackathon brief\u2014online or offline.",
  themeColor: themeTokens.colors.brand[600],
  backgroundColor: themeTokens.colors.surface.base,
  offlineSnapshotName: "offline-brief"
};

// vite.config.ts
var __vite_injected_original_import_meta_url = "file:///home/project/vite.config.ts";
var buildVersion = process.env.BUILD_VERSION ?? (/* @__PURE__ */ new Date()).toISOString();
var vite_config_default = defineConfig({
  plugins: [
    react(),
    VitePWA({
      registerType: "autoUpdate",
      injectRegister: "auto",
      includeAssets: ["/icons/app-icon.svg"],
      workbox: {
        globPatterns: ["**/*.{js,css,html,ico,png,svg,webmanifest}"],
        runtimeCaching: [
          {
            urlPattern: ({ url }) => url.pathname.startsWith("/assets/"),
            handler: "CacheFirst",
            options: {
              cacheName: `shell-assets-${buildVersion}`,
              expiration: {
                maxEntries: 60,
                maxAgeSeconds: 60 * 60 * 24 * 30
                // 30 days
              }
            }
          },
          {
            urlPattern: ({ url }) => url.pathname.endsWith(`${appMetadata.offlineSnapshotName}.json`),
            handler: "StaleWhileRevalidate",
            options: {
              cacheName: `offline-brief-${buildVersion}`,
              expiration: {
                maxEntries: 1
              }
            }
          }
        ]
      },
      manifest: {
        name: appMetadata.name,
        short_name: appMetadata.shortName,
        description: appMetadata.description,
        theme_color: appMetadata.themeColor,
        background_color: appMetadata.backgroundColor,
        start_url: "/brief",
        display: "standalone",
        orientation: "portrait-primary",
        icons: [
          {
            src: "/icons/app-icon.svg",
            sizes: "192x192",
            type: "image/svg+xml"
          },
          {
            src: "/icons/app-icon.svg",
            sizes: "512x512",
            type: "image/svg+xml"
          }
        ]
      },
      devOptions: {
        enabled: false
      }
    })
  ],
  define: {
    __BUILD_VERSION__: JSON.stringify(buildVersion)
  },
  resolve: {
    alias: {
      "@": fileURLToPath(new URL("./src", __vite_injected_original_import_meta_url))
    }
  },
  optimizeDeps: {
    exclude: ["lucide-react"]
  },
  test: {
    globals: true,
    environment: "jsdom",
    setupFiles: "./src/test/setup.ts",
    css: true
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
